{"version":3,"file":"static/js/350.66d07b02.chunk.js","mappings":"4MAmDA,UA1CoB,SAAHA,GAAiC,IAA3BC,EAASD,EAATC,UAAWC,EAAQF,EAARE,SACtBC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4EC,EAAAA,EAAAA,KAApEC,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAAkBC,GAAFJ,EAATK,UAAuBL,EAAZI,cAAcE,EAAUN,EAAVM,WAAWC,EAAYP,EAAZO,cAE3DC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAACjB,IAEJ,IAAMiB,EAAa,WAGf,OAFAH,IAEQf,GACJ,IAAK,SACDgB,EAAaf,GACRkB,KAAKC,GACV,MACJ,IAAK,aACDP,EAAaZ,GACRkB,KAAKC,GAEtB,EACAC,QAAQC,IAAIrB,GAEZ,IAAMmB,EAAe,SAACb,GAClBC,EAAQD,EACZ,EAEMgB,EAAeX,GAAQY,EAAAA,EAAAA,KAACC,EAAAA,EAAa,IAAM,KAC3CC,EAAUf,GAASa,EAAAA,EAAAA,KAACG,EAAAA,EAAc,IAAM,KACxCC,EAAYjB,GAAUC,IAAUL,EAAoC,MAA5BiB,EAAAA,EAAAA,KAACzB,EAAS,CAACQ,KAAMA,IAE/D,OACIsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIP,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,IACRT,EACAG,EACAE,IAGb,C","sources":["components/pages/SinglePages.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport ServicesError from \"../../services/ServicesError\";\nimport LoadingSpinner from \"../loadingSpinner/LoadingSpinner\";\nimport AppBaner from \"../appBaner/AppBaner\";\n\nconst SinglePages = ({ Component, dataType }) => {\n    const { id } = useParams();\n    const [data, setData] = useState(null);\n    const { loader, error, getComics, selectPerson, clearError,getComicById } = useMarvelService();\n\n    useEffect(() => {\n        updateData()\n    }, [id])\n\n    const updateData = () => {\n        clearError();\n\n        switch (dataType) {\n            case 'comics':\n                getComicById(id)\n                    .then(onDataLoaded);\n                break;\n            case 'characters':\n                selectPerson(id)\n                    .then(onDataLoaded);\n        }\n    }\n    console.log(id)\n\n    const onDataLoaded = (data) => {\n        setData(data);\n    }\n\n    const errorMessage = error ? <ServicesError /> : null;\n    const spinner = loader ? <LoadingSpinner /> : null;\n    const content = !(loader || error || !data) ? <Component data={data} /> : null;\n\n    return (\n        <>\n            <AppBaner />\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nexport default SinglePages"],"names":["_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","loader","error","selectPerson","getComics","clearError","getComicById","useEffect","updateData","then","onDataLoaded","console","log","errorMessage","_jsx","ServicesError","spinner","LoadingSpinner","content","_jsxs","_Fragment","children","AppBaner"],"sourceRoot":""}